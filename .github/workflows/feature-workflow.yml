# This is a basic workflow to help you get started with Actions
name: Feature Deploy

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
      - 'feature-**'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Cache npm dependencies
      - name: Restore node modules from cache
        uses: actions/cache@v2
        env:
          cache-name: npm-modules-feature
        with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      # Node install
      - name: Install dependencies
        run: npm install --only=prod
      
      # Build
      - name: Build App
        run: npm run build
        env:
          CI: ""

      # Store 
      - name: Archive Production Artifact
        uses: actions/upload-artifact@master
        with:
          name: build
          path: build
          retention-days: 1
          
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Extract branch name
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV 

      # Cache npm dependencies
      - name: Restore Firebase from cache
        uses: actions/cache@v2
        with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: firebase-${{ env.BRANCH_NAME }}

      - name: Install Firebase
        run: npm install firebase-tools 
      
      - uses: actions/download-artifact@v2
        with:
          name: build
          path: build
      
      - name: Deploy to Firebase Channel
        run: |
          npx firebase use default
          npx firebase hosting:channel:deploy $BRANCH_NAME
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
